FROM php:8.2-fpm-alpine3.18

# Set the maintainer label
LABEL Maintainer="Kazem Mirzaei <k90mirzaei@gmail.com>"
LABEL Description="PHP-FPM v8.2 with essential extensions on top of Alpine Linux."

# Set environment variables for the user and group
ENV USER www
ENV GROUP www

# Switch to root user to perform system updates and installations
USER root

# Composer - https://getcomposer.org/download/
ARG COMPOSER_VERSION="2.5.5"
ARG COMPOSER_SUM="566a6d1cf4be1cc3ac882d2a2a13817ffae54e60f5aa7c9137434810a5809ffc"


#############################################
### Install and enable PHP extensions
#############################################

# Install system dependencies
RUN set -ex \
    && apk add --update --no-cache \
        c-client \
        freetype \
        ffmpeg \
        gettext \
        gmp \
        icu-libs \
        imagemagick \
        imap \
        libintl \
        libjpeg-turbo \
        libpng \
        libpq \
        libtool \
        libxpm \
        libxslt \
        libzip \
        make \
        tzdata

# Development dependencies
RUN set -ex \
    && apk add --update --no-cache \
        autoconf \
        curl-dev \
        freetype-dev \
        g++ \
        gcc \
        gettext-dev \
        git \
        gmp-dev \
        icu-dev \
        imagemagick-dev \
        imap-dev \
        krb5-dev \
        libc-dev \
        libjpeg-turbo-dev \
        libpng-dev \
        libwebp-dev \
        libxml2-dev \
        libxpm-dev \
        libxslt-dev \
        libzip-dev \
        pcre-dev \
        pkgconf \
        zlib-dev \
    \
    ################################
    # Install PHP extensions
    ################################
    \
    # Install gd
    && ln -s /usr/lib/$(apk --print-arch)-linux-gnu/libXpm.* /usr/lib/ \
    && docker-php-ext-configure gd \
        --enable-gd \
        --with-webp \
        --with-jpeg \
        --with-xpm \
        --with-freetype \
        --enable-gd-jis-conv \
    && docker-php-ext-install -j$(nproc) gd \
    && true \
    \
    # Install gettext
    && docker-php-ext-install -j$(nproc) gettext \
    && true \
    \
    # Install gmp
    && docker-php-ext-install -j$(nproc) gmp \
    && true \
    \
    # Install bcmath
    && docker-php-ext-install -j$(nproc) bcmath \
    && true \
    \
    # Install exif
    && docker-php-ext-install -j$(nproc) exif \
    && true \
    \
    # Install imap
    && docker-php-ext-configure imap --with-kerberos --with-imap-ssl --with-imap \
    && docker-php-ext-install -j$(nproc) imap \
    && true \
    \
    # Install imagick
    && pecl install imagick \
    && docker-php-ext-enable imagick \
    && true \
    \
    # Install intl
    && docker-php-ext-install -j$(nproc) intl \
    && true \
    \
    # Install pdo_mysql
    && docker-php-ext-configure pdo_mysql --with-zlib-dir=/usr \
    && docker-php-ext-install -j$(nproc) pdo pdo_mysql \
    && true \
    \
    # Install pcntl
    && docker-php-ext-install -j$(nproc) pcntl \
    && true \
    \
    # Install redis
    && pecl install --force redis \
    && docker-php-ext-enable redis \
    && true \
    \
    # Install zip
    && docker-php-ext-configure zip --with-zip \
    && docker-php-ext-install -j$(nproc) zip \
    && true \
    \
    # Clean up build packages
    && docker-php-source delete \
    && rm -fr /tmp/pear \ 
    && rm -rf /tmp/* \
    && rm -rf /var/cache/apk/* \
    && true

# Install Composer
RUN set -eux \
    && curl -LO "https://getcomposer.org/download/${COMPOSER_VERSION}/composer.phar" \
    && echo "${COMPOSER_SUM}  composer.phar" | sha256sum -c - \
    && chmod +x composer.phar \
    && mv composer.phar /usr/local/bin/composer \
    && composer --version \
    && true

# Set the working directory
WORKDIR /var/www

# Create a non-root user and group
RUN getent group ${GROUP} || addgroup -g 1000 ${GROUP} 
RUN id -u ${USER} || adduser --shell /sbin/nologin --disabled-password --no-create-home --uid 1000 --ingroup ${GROUP} ${USER}

# Grant write permissions to the non-root user and group
RUN chown -R ${USER}:${GROUP} /var/www

# Switch to the non-root user
USER ${USER}

# Start PHP-FPM
EXPOSE 9000
CMD ["php-fpm"]