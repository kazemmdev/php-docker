FROM php:8.2-fpm-alpine3.18

LABEL maintainer="Kazem Mirzaei <k90mirzaei@gmail.com>"

ENV USER=www
ENV GROUP=www

USER root

# Install system dependencies
RUN set -ex \
    && apk add --update --no-cache --virtual .build-deps \
        autoconf \
        curl \
        g++ \
        libmemcached-dev \
        libtool \
        libzip-dev \
        libxml2-dev \
        make \
        oniguruma-dev \
        unzip \
        zip \
    \
    && docker-php-ext-install \
        bcmath \
        pdo \
        pdo_mysql \
        mbstring \
        exif \
        pcntl \
        xml \
    \
    # Install gd
    && apk add --update --no-cache \
        libjpeg-turbo-dev \
        libpng-dev \
        libwebp-dev \
        freetype-dev \
    && docker-php-ext-configure gd --with-jpeg --with-freetype \
	&& docker-php-ext-install gd \
    \
    # Install ffmpeg
    && apk add --update --no-cache ffmpeg \
    \
    # Install redis
    && apk --no-cache add pcre-dev ${PHPIZE_DEPS} \
    && pecl install redis \
    && apk del pcre-dev ${PHPIZE_DEPS} \
    && docker-php-ext-enable redis \        
    \
    # Install zip 
    && docker-php-ext-configure zip \
    && docker-php-ext-install zip \
    \
    # Clean up
    && apk del .build-deps \
    && rm -fr /tmp/pear \ 
    && rm -rf /tmp/* \
    && rm -rf /var/cache/apk/*

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/local/bin/composer

# Setup working directory
WORKDIR /var/www/

# create user
RUN getent group ${GROUP} || addgroup -g 1000 ${GROUP} 
RUN id -u ${USER} || adduser --shell /sbin/nologin --disabled-password --no-create-home --uid 1000 --ingroup ${GROUP} ${USER}

## Grant Permissions
RUN chown -R ${USER} /var/www

### Select User
USER ${USER}

# Grant permission to selected user
COPY --chown=${USER}:${GROUP} . .

# Execute scripts
COPY --chown=${USER}:${GROUP} entrypoint.sh /tmp/entrypoint.sh 
RUN ["chmod", "+x", "/tmp/entrypoint.sh"]
ENTRYPOINT [ "/tmp/entrypoint.sh" ]

# Keep php live
CMD [ "php-fpm" ]
